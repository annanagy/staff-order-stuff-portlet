/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.support.stafforderstuff.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Consumption service. Represents a row in the &quot;StaffOrderStuff_Consumption&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.support.stafforderstuff.model.impl.ConsumptionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.support.stafforderstuff.model.impl.ConsumptionImpl}.
 * </p>
 *
 * @author Anna & Ádám
 * @see Consumption
 * @see com.liferay.support.stafforderstuff.model.impl.ConsumptionImpl
 * @see com.liferay.support.stafforderstuff.model.impl.ConsumptionModelImpl
 * @generated
 */
public interface ConsumptionModel extends BaseModel<Consumption> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a consumption model instance should use the {@link Consumption} interface instead.
	 */

	/**
	 * Returns the primary key of this consumption.
	 *
	 * @return the primary key of this consumption
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this consumption.
	 *
	 * @param primaryKey the primary key of this consumption
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the consumption ID of this consumption.
	 *
	 * @return the consumption ID of this consumption
	 */
	public long getConsumptionId();

	/**
	 * Sets the consumption ID of this consumption.
	 *
	 * @param ConsumptionId the consumption ID of this consumption
	 */
	public void setConsumptionId(long ConsumptionId);

	/**
	 * Returns the user ID of this consumption.
	 *
	 * @return the user ID of this consumption
	 */
	public int getUserId();

	/**
	 * Sets the user ID of this consumption.
	 *
	 * @param UserId the user ID of this consumption
	 */
	public void setUserId(int UserId);

	/**
	 * Returns the food ID of this consumption.
	 *
	 * @return the food ID of this consumption
	 */
	public int getFoodId();

	/**
	 * Sets the food ID of this consumption.
	 *
	 * @param FoodId the food ID of this consumption
	 */
	public void setFoodId(int FoodId);

	/**
	 * Returns the date of this consumption.
	 *
	 * @return the date of this consumption
	 */
	public Date getDate();

	/**
	 * Sets the date of this consumption.
	 *
	 * @param Date the date of this consumption
	 */
	public void setDate(Date Date);

	/**
	 * Returns the quantity of this consumption.
	 *
	 * @return the quantity of this consumption
	 */
	public double getQuantity();

	/**
	 * Sets the quantity of this consumption.
	 *
	 * @param Quantity the quantity of this consumption
	 */
	public void setQuantity(double Quantity);

	/**
	 * Returns the unit of this consumption.
	 *
	 * @return the unit of this consumption
	 */
	@AutoEscape
	public String getUnit();

	/**
	 * Sets the unit of this consumption.
	 *
	 * @param Unit the unit of this consumption
	 */
	public void setUnit(String Unit);

	/**
	 * Returns the status of this consumption.
	 *
	 * @return the status of this consumption
	 */
	public int getStatus();

	/**
	 * Sets the status of this consumption.
	 *
	 * @param Status the status of this consumption
	 */
	public void setStatus(int Status);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Consumption consumption);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Consumption> toCacheModel();

	@Override
	public Consumption toEscapedModel();

	@Override
	public Consumption toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}